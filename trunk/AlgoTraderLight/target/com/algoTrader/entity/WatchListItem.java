// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package com.algoTrader.entity;

/**
 * 
 */
public abstract class WatchListItem
    extends com.algoTrader.BaseObject
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -4095123636197045014L;

    private boolean persistent;

    /**
     * 
     */
    public boolean isPersistent()
    {
        return this.persistent;
    }

    public void setPersistent(boolean persistent)
    {
        this.persistent = persistent;
    }

    private int id;

    /**
     * 
     */
    public int getId()
    {
        return this.id;
    }

    public void setId(int id)
    {
        this.id = id;
    }

    private com.algoTrader.entity.Security security;

    /**
     * 
     */
    public com.algoTrader.entity.Security getSecurity()
    {
        return this.security;
    }

    public void setSecurity(com.algoTrader.entity.Security security)
    {
        this.security = security;
    }

    private com.algoTrader.entity.Strategy strategy;

    /**
     * 
     */
    public com.algoTrader.entity.Strategy getStrategy()
    {
        return this.strategy;
    }

    public void setStrategy(com.algoTrader.entity.Strategy strategy)
    {
        this.strategy = strategy;
    }

    /**
     * Returns <code>true</code> if the argument is an WatchListItem instance and all identifiers for this entity
     * equal the identifiers of the argument entity. Returns <code>false</code> otherwise.
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof WatchListItem))
        {
            return false;
        }
        final WatchListItem that = (WatchListItem)object;
        if (this.id != that.getId())
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (int)id;

        return hashCode;
    }

    /**
     * Constructs new instances of {@link com.algoTrader.entity.WatchListItem}.
     */
    public static final class Factory
    {
        /**
         * Constructs a new instance of {@link com.algoTrader.entity.WatchListItem}.
         */
        public static com.algoTrader.entity.WatchListItem newInstance()
        {
            return new com.algoTrader.entity.WatchListItemImpl();
        }


        /**
         * Constructs a new instance of {@link com.algoTrader.entity.WatchListItem}, taking all possible properties
         * (except the identifier(s))as arguments.
         */
        public static com.algoTrader.entity.WatchListItem newInstance(boolean persistent, com.algoTrader.entity.Security security, com.algoTrader.entity.Strategy strategy)
        {
            final com.algoTrader.entity.WatchListItem entity = new com.algoTrader.entity.WatchListItemImpl();
            entity.setPersistent(persistent);
            entity.setSecurity(security);
            entity.setStrategy(strategy);
            return entity;
        }
    }

// HibernateEntity.vsl merge-point
}